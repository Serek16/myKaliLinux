
### MY CONFIG ###

# Show files in the directory you switch to
function cd() {
  builtin cd "$1" && ls
}

alias update="sudo apt update && sudo apt upgrade -y && sudo apt autoremove -y"
alias upgrade="update"
alias ld="du -hd 1"            # Show sizes of directories
alias rm="trash-put"           # rm now puts files in trash instead of removing them pernamently
alias rmm="/usr/bin/rm"        # tmp removes files pernamently
alias mv="mv -i"               # Ask before overwritting
alias mvv="/usr/bin/mv"        # default mv cmd
alias cp="cp -i"               # Ask before overwritting
alias cpp="/usr/bin/cp"        # default cp cmd
alias sudo="sudo "             # Fix using sudo with custom aliases
alias tarc="tar -czvf"         # Create tar.gz archive
alias tarx="tar -xzvf"         # Extract tar.gz archive
c="xclip -selection clipboard" # Copy cmd output to a clipboard
alias copy="$c"                #  e.g. clipboard e.g. "cat file.txt | copy"
alias c="$c"                   #  or "echo 'Hello' |c" or "c file.txt"
alias txt="gnome-text-editor"  # gnome text editor cmd alias
alias rs="rsync --info=progress2 -ahz" # copy files and show progress bar
alias bat="batcat"             # upgraded cat/less
alias cat="bat -pp"            # syntax highlight for cat
alias less="bat -p --paging=always" # syntax highlight for less

export EDITOR=/usr/bin/nano # Use nano as default editor for some command

# Pendrive storage and veracrypt container aliases and commands
sto="/media/pendrive/"
alias storage="cd $sto"
alias sto=storage

enc="/media/veracrypt/"
function encrypted() {
  if [ -w "$enc" ]; then
    cd "$enc"
  else
    echo "Veracrypt storage isn't mounted. Mounting now..."
    mount-encrypted-storage
    if [ $? == 0 ]; then
      cd "$enc"
    fi
  fi
}
alias enc=encrypted


# Hashcat utils commands
function ion() {
  sudo ip link set wlan0 down
  sudo iw wlan0 set type managed
  sudo ip link set wlan0 up
  sudo systemctl start wpa_supplicant
  sudo systemctl start NetworkManager
}

function ioff() {
  sudo systemctl stop NetworkManager
  sudo systemctl stop wpa_supplicant
}

# Launch tmux at start
if command -v tmux &> /dev/null && [ -n "$PS1" ] && [[ ! "$TERM" =~ screen ]] && [[ ! "$TERM" =~ tmux ]] && [ -z "$TMUX" ]; then
  session="main"

  tmux has-session -t $session 2>/dev/null
  if [ $? != 0 ]; then
    exec tmux new-session -s main
  fi

  if tmux list-sessions -F "#{session_name}: #{session_attached}" | grep -q "^$session: 1$"; then
    exec tmux new-session
  else
    exec tmux attach-session -t $session
  fi
fi
